{
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": "-- Grafana --",
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "gnetId": null,
    "graphTooltip": 0,
    "id": 4,
    "links": [],
    "panels": [
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Postgres",
        "description": "Language comparison of unary ping pong between two GKE nodes in the same cluster (each node resides on a separate VM, both VMs are located in the same compute zone). Secure connection is used.",
        "fieldConfig": {
          "defaults": {
            "unit": "short"
          },
          "overrides": []
        },
        "fill": 0,
        "fillGradient": 0,
        "gridPos": {
          "h": 9,
          "w": 24,
          "x": 0,
          "y": 0
        },
        "hiddenSeries": false,
        "id": 2,
        "legend": {
          "alignAsTable": true,
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "rightSide": true,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "7.5.5",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": ${series_overrides},
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
        % for experiment in experiments:
          {
            "format": "time_series",
            "group": [],
            "hide": false,
            "metricColumn": "none",
            "queryType": "randomWalk",
            "rawQuery": true,
            "rawSql": "SELECT\n  (metadata->>'created')::timestamp AS time,\n  '${experiment["name"]}' AS metric,\n  MAX(CAST(summary->>'latency50' AS DOUBLE PRECISION) / 1000) as latency_us\nFROM\n ${experiment["8core_table"]}\nWHERE\n $__timeFilter(metadata->>'created') AND\n scenario->>'name' = 'cpp_protobuf_sync_unary_ping_pong_secure'\n GROUP BY\n     time, metric;",
            "refId": "${experiment["name"]}",
            "select": [
              [
                {
                  "params": [
                    "servercpuusage"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "${experiment["8core_table"]}",
            "timeColumn": "metadata->>'created'",
            "timeColumnType": "float8",
            "where": [
              {
                "name": "$__unixEpochFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }${',' if not loop.last else ''}
          % endfor
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Unary secure ping pong median latency - Language comparison (in microsec)",
        "tooltip": {
          "shared": false,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "$$hashKey": "object:126",
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "$$hashKey": "object:127",
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Postgres",
        "description": "Language comparison of streaming ping pong between two GKE nodes in the same cluster (each node resides on a separate VM, both VMs are located in the same compute zone). Secure connection is used.",
        "fieldConfig": {
          "defaults": {
            "unit": "short"
          },
          "overrides": []
        },
        "fill": 0,
        "fillGradient": 0,
        "gridPos": {
          "h": 9,
          "w": 24,
          "x": 0,
          "y": 18
        },
        "hiddenSeries": false,
        "id": 8,
        "legend": {
          "alignAsTable": true,
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "rightSide": true,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "7.5.5",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": ${series_overrides},
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
        % for experiment in experiments:
          {
            "format": "time_series",
            "group": [],
            "metricColumn": "scenario",
            "queryType": "randomWalk",
            "rawQuery": true,
            "rawSql": "SELECT\n    (metadata->>'created')::timestamp AS \"time\",\n    '${experiment["name"]}' as metric,\n    MAX(CAST(summary->>'latency50' AS DOUBLE PRECISION) / 1000) as latency_us\nFROM ${experiment["8core_table"]}\nWHERE\n  $__timeFilter(metadata->>'created') AND\n  scenario->>'name' = 'cpp_protobuf_async_streaming_ping_pong_secure'\nGROUP BY\n  \"time\", metric;",
            "refId": "${experiment["name"]}",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "${experiment["8core_table"]}",
            "timeColumn": "date",
            "timeColumnType": "timestamptz",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }${',' if not loop.last else ''}
          % endfor
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Streaming secure ping pong median latency (in microsec)",
        "tooltip": {
          "shared": false,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "$$hashKey": "object:1707",
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "$$hashKey": "object:1708",
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Postgres",
        "description": "Throughput as number of unary RPCs per second between two GKE nodes in the same cluster (each node resides on a separate 8core VM, both VMs are located in the same compute zone). Secure connection is used.",
        "fieldConfig": {
          "defaults": {
            "unit": "short"
          },
          "overrides": []
        },
        "fill": 0,
        "fillGradient": 0,
        "gridPos": {
          "h": 9,
          "w": 8,
          "x": 0,
          "y": 27
        },
        "hiddenSeries": false,
        "id": 26,
        "legend": {
          "alignAsTable": true,
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "rightSide": true,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "7.5.5",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": ${series_overrides},
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
        % for experiment in experiments:
          {
            "format": "time_series",
            "group": [],
            "metricColumn": "scenario",
            "queryType": "randomWalk",
            "rawQuery": true,
            "rawSql": "SELECT\n    (metadata->>'created')::timestamp AS \"time\",\n    '${experiment["name"]}' as metric,\n    MIN(ROUND(CAST(summary->>'qps' AS DOUBLE PRECISION))) as throughput_qps\nFROM ${experiment["8core_table"]}\nWHERE\n  $__timeFilter(metadata->>'created') AND\n  scenario->>'name' = 'cpp_protobuf_async_unary_qps_unconstrained_secure'\nGROUP BY\n  \"time\", metric;",
            "refId": "${experiment["name"]}",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "${experiment["8core_table"]}",
            "timeColumn": "date",
            "timeColumnType": "timestamptz",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }${',' if not loop.last else ''}
          % endfor
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Unary secure throughput QPS (8 core client to 8 core server)",
        "tooltip": {
          "shared": false,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "$$hashKey": "object:3544",
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "$$hashKey": "object:3545",
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Postgres",
        "description": "",
        "fieldConfig": {
          "defaults": {
            "unit": "short"
          },
          "overrides": []
        },
        "fill": 0,
        "fillGradient": 0,
        "gridPos": {
          "h": 9,
          "w": 8,
          "x": 8,
          "y": 27
        },
        "hiddenSeries": false,
        "id": 13,
        "legend": {
          "alignAsTable": true,
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "rightSide": true,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "7.5.5",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": ${series_overrides},
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
        % for experiment in experiments:
          {
            "format": "time_series",
            "group": [],
            "metricColumn": "scenario",
            "queryType": "randomWalk",
            "rawQuery": true,
            "rawSql": "SELECT\n    (metadata->>'created')::timestamp AS \"time\",\n    '${experiment["name"]}' as metric,\n    MAX(ROUND(CAST(summary->>'serverSystemTime' AS DOUBLE PRECISION) + CAST(summary->>'serverUserTime' AS DOUBLE PRECISION))) / 100 as server_cpu\nFROM ${experiment["8core_table"]}\nWHERE\n  $__timeFilter(metadata->>'created') AND\n  scenario->>'name' = 'cpp_protobuf_async_unary_qps_unconstrained_secure'\nGROUP BY\n  \"time\", metric;",
            "refId": "${experiment["name"]}",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "${experiment["8core_table"]}",
            "timeColumn": "date",
            "timeColumnType": "timestamptz",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }${',' if not loop.last else ''}
          % endfor
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Unary secure server CPU (8 core client to 8 core server)",
        "tooltip": {
          "shared": false,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Postgres",
        "description": "",
        "fieldConfig": {
          "defaults": {
            "unit": "short"
          },
          "overrides": []
        },
        "fill": 0,
        "fillGradient": 0,
        "gridPos": {
          "h": 9,
          "w": 8,
          "x": 16,
          "y": 27
        },
        "hiddenSeries": false,
        "id": 14,
        "legend": {
          "alignAsTable": true,
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "rightSide": true,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "7.5.5",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": ${series_overrides},
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
        % for experiment in experiments:
          {
            "format": "time_series",
            "group": [],
            "metricColumn": "scenario",
            "queryType": "randomWalk",
            "rawQuery": true,
            "rawSql": "SELECT\n    (metadata->>'created')::timestamp AS \"time\",\n    '${experiment["name"]}' as metric,\n    MAX(ROUND(CAST(summary->>'clientSystemTime' AS DOUBLE PRECISION) + CAST(summary->>'clientUserTime' AS DOUBLE PRECISION)) / 100) as client_cpu\nFROM ${experiment["8core_table"]}\nWHERE\n  $__timeFilter(metadata->>'created') AND\n  scenario->>'name' = 'cpp_protobuf_async_unary_qps_unconstrained_secure'\nGROUP BY\n  \"time\", metric;",
            "refId": "${experiment["name"]}",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "${experiment["8core_table"]}",
            "timeColumn": "date",
            "timeColumnType": "timestamptz",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }${',' if not loop.last else ''}
          % endfor
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Unary secure client CPU (8 core client to 8 core server)",
        "tooltip": {
          "shared": false,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Postgres",
        "description": "Throughput as streaming ping-pong operations per second between two GKE nodes in the same cluster (each node resides on a separate 8core VM, both VMs are located in the same compute zone). Secure connection is used.",
        "fieldConfig": {
          "defaults": {
            "unit": "short"
          },
          "overrides": []
        },
        "fill": 0,
        "fillGradient": 0,
        "gridPos": {
          "h": 9,
          "w": 8,
          "x": 0,
          "y": 36
        },
        "hiddenSeries": false,
        "id": 6,
        "legend": {
          "alignAsTable": true,
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "rightSide": true,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "7.5.5",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": ${series_overrides},
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
        % for experiment in experiments:
          {
            "format": "time_series",
            "group": [],
            "metricColumn": "scenario",
            "queryType": "randomWalk",
            "rawQuery": true,
            "rawSql": "SELECT\n    (metadata->>'created')::timestamp AS \"time\",\n    '${experiment["name"]}' as metric,\n    MIN(ROUND(CAST(summary->>'qps' AS DOUBLE PRECISION))) as throughput_qps\nFROM ${experiment["8core_table"]}\nWHERE\n  $__timeFilter(metadata->>'created') AND\n  scenario->>'name' = 'cpp_protobuf_async_streaming_qps_unconstrained_secure'\nGROUP BY\n  \"time\", metric;",
            "refId": "${experiment["name"]}",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "${experiment["8core_table"]}",
            "timeColumn": "date",
            "timeColumnType": "timestamptz",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }${',' if not loop.last else ''}
          % endfor
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Streaming secure throughput QPS (8 core client to 8 core server)",
        "tooltip": {
          "shared": false,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Postgres",
        "description": "",
        "fieldConfig": {
          "defaults": {
            "unit": "short"
          },
          "overrides": []
        },
        "fill": 0,
        "fillGradient": 0,
        "gridPos": {
          "h": 9,
          "w": 8,
          "x": 8,
          "y": 36
        },
        "hiddenSeries": false,
        "id": 19,
        "legend": {
          "alignAsTable": true,
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "rightSide": true,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "7.5.5",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": ${series_overrides},
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
        % for experiment in experiments:
          {
            "format": "time_series",
            "group": [],
            "metricColumn": "scenario",
            "queryType": "randomWalk",
            "rawQuery": true,
            "rawSql": "SELECT\n    (metadata->>'created')::timestamp AS \"time\",\n    '${experiment["name"]}' as metric,\n    MAX(ROUND(CAST(summary->>'serverSystemTime' AS DOUBLE PRECISION) + CAST(summary->>'serverUserTime' AS DOUBLE PRECISION))) / 100 as server_cpu\nFROM ${experiment["8core_table"]}\nWHERE\n  $__timeFilter(metadata->>'created') AND\n  scenario->>'name' = 'cpp_protobuf_async_streaming_qps_unconstrained_secure'\nGROUP BY\n  \"time\", metric;",
            "refId": "${experiment["name"]}",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "${experiment["8core_table"]}",
            "timeColumn": "date",
            "timeColumnType": "timestamptz",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }${',' if not loop.last else ''}
          % endfor
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Streaming secure server CPU (8 core client to 8 core server)",
        "tooltip": {
          "shared": false,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Postgres",
        "description": "",
        "fieldConfig": {
          "defaults": {
            "unit": "short"
          },
          "overrides": []
        },
        "fill": 0,
        "fillGradient": 0,
        "gridPos": {
          "h": 9,
          "w": 8,
          "x": 16,
          "y": 36
        },
        "hiddenSeries": false,
        "id": 20,
        "legend": {
          "alignAsTable": true,
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "rightSide": true,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "7.5.5",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": ${series_overrides},
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
        % for experiment in experiments:
          {
            "format": "time_series",
            "group": [],
            "metricColumn": "scenario",
            "queryType": "randomWalk",
            "rawQuery": true,
            "rawSql": "SELECT\n    (metadata->>'created')::timestamp AS \"time\",\n    '${experiment["name"]}' as metric,\n    MAX(ROUND(CAST(summary->>'clientSystemTime' AS DOUBLE PRECISION) + CAST(summary->>'clientUserTime' AS DOUBLE PRECISION)) / 100) as client_cpu\nFROM ${experiment["8core_table"]}\nWHERE\n  $__timeFilter(metadata->>'created') AND\n  scenario->>'name' = 'cpp_protobuf_async_streaming_qps_unconstrained_secure'\nGROUP BY\n  \"time\", metric;",
            "refId": "${experiment["name"]}",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "${experiment["8core_table"]}",
            "timeColumn": "date",
            "timeColumnType": "timestamptz",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }${',' if not loop.last else ''}
          % endfor
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Streaming secure client CPU (8 core client to 8 core server)",
        "tooltip": {
          "shared": false,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Postgres",
        "description": "Throughput as number of unary RPCs per second between two GKE nodes in the same cluster (each node resides on a separate 32core VM, both VMs are located in the same compute zone). Secure connection is used.",
        "fieldConfig": {
          "defaults": {
            "unit": "short"
          },
          "overrides": []
        },
        "fill": 0,
        "fillGradient": 0,
        "gridPos": {
          "h": 9,
          "w": 8,
          "x": 0,
          "y": 45
        },
        "hiddenSeries": false,
        "id": 15,
        "legend": {
          "alignAsTable": true,
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "rightSide": true,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "7.5.5",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": ${series_overrides},
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
        % for experiment in experiments:
          {
            "format": "time_series",
            "group": [],
            "metricColumn": "scenario",
            "queryType": "randomWalk",
            "rawQuery": true,
            "rawSql": "SELECT\n    (metadata->>'created')::timestamp AS \"time\",\n    '${experiment["name"]}' as metric,\n    MIN(ROUND(CAST(summary->>'qps' AS DOUBLE PRECISION))) as throughput_qps\nFROM ${experiment["32core_table"]}\nWHERE\n  $__timeFilter(metadata->>'created') AND\n  scenario->>'name' = 'cpp_protobuf_async_unary_qps_unconstrained_secure'\nGROUP BY\n  \"time\", metric;",
            "refId": "${experiment["name"]}",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "${experiment["8core_table"]}",
            "timeColumn": "date",
            "timeColumnType": "timestamptz",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }${',' if not loop.last else ''}
          % endfor
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Unary secure throughput QPS (32 core client to 32 core server)",
        "tooltip": {
          "shared": false,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Postgres",
        "description": "",
        "fieldConfig": {
          "defaults": {
            "unit": "short"
          },
          "overrides": []
        },
        "fill": 0,
        "fillGradient": 0,
        "gridPos": {
          "h": 9,
          "w": 8,
          "x": 8,
          "y": 45
        },
        "hiddenSeries": false,
        "id": 21,
        "legend": {
          "alignAsTable": true,
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "rightSide": true,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "7.5.5",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": ${series_overrides},
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
        % for experiment in experiments:
          {
            "format": "time_series",
            "group": [],
            "metricColumn": "scenario",
            "queryType": "randomWalk",
            "rawQuery": true,
            "rawSql": "SELECT\n    (metadata->>'created')::timestamp AS \"time\",\n    '${experiment["name"]}' as metric,\n    MAX(ROUND(CAST(summary->>'serverSystemTime' AS DOUBLE PRECISION) + CAST(summary->>'serverUserTime' AS DOUBLE PRECISION))) / 100 as server_cpu\nFROM ${experiment["32core_table"]}\nWHERE\n  $__timeFilter(metadata->>'created') AND\n  scenario->>'name' = 'cpp_protobuf_async_unary_qps_unconstrained_secure'\nGROUP BY\n  \"time\", metric;",
            "refId": "${experiment["name"]}",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "${experiment["8core_table"]}",
            "timeColumn": "date",
            "timeColumnType": "timestamptz",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }${',' if not loop.last else ''}
          % endfor
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Unary secure server CPU (32 core client to 32 core server)",
        "tooltip": {
          "shared": false,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Postgres",
        "description": "",
        "fieldConfig": {
          "defaults": {
            "unit": "short"
          },
          "overrides": []
        },
        "fill": 0,
        "fillGradient": 0,
        "gridPos": {
          "h": 9,
          "w": 8,
          "x": 16,
          "y": 45
        },
        "hiddenSeries": false,
        "id": 17,
        "legend": {
          "alignAsTable": true,
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "rightSide": true,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "7.5.5",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": ${series_overrides},
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
        % for experiment in experiments:
          {
            "format": "time_series",
            "group": [],
            "metricColumn": "scenario",
            "queryType": "randomWalk",
            "rawQuery": true,
            "rawSql": "SELECT\n    (metadata->>'created')::timestamp AS \"time\",\n    '${experiment["name"]}' as metric,\n    MAX(ROUND(CAST(summary->>'clientSystemTime' AS DOUBLE PRECISION) + CAST(summary->>'clientUserTime' AS DOUBLE PRECISION)) / 100) as client_cpu\nFROM ${experiment["32core_table"]}\nWHERE\n  $__timeFilter(metadata->>'created') AND\n  scenario->>'name' = 'cpp_protobuf_async_unary_qps_unconstrained_secure'\nGROUP BY\n  \"time\", metric;",
            "refId": "${experiment["name"]}",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "${experiment["8core_table"]}",
            "timeColumn": "date",
            "timeColumnType": "timestamptz",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }${',' if not loop.last else ''}
          % endfor
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Unary secure client CPU (32 core client to 32 core server)",
        "tooltip": {
          "shared": false,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Postgres",
        "description": "Throughput as streaming ping-pong operations per second between two GKE nodes in the same cluster (each node resides on a separate 32core VM, both VMs are located in the same compute zone). Secure connection is used.",
        "fieldConfig": {
          "defaults": {
            "unit": "short"
          },
          "overrides": []
        },
        "fill": 0,
        "fillGradient": 0,
        "gridPos": {
          "h": 9,
          "w": 8,
          "x": 0,
          "y": 54
        },
        "hiddenSeries": false,
        "id": 22,
        "legend": {
          "alignAsTable": true,
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "rightSide": true,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "7.5.5",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": ${series_overrides},
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
        % for experiment in experiments:
          {
            "format": "time_series",
            "group": [],
            "metricColumn": "scenario",
            "queryType": "randomWalk",
            "rawQuery": true,
            "rawSql": "SELECT\n    (metadata->>'created')::timestamp AS \"time\",\n    '${experiment["name"]}' as metric,\n    MIN(ROUND(CAST(summary->>'qps' AS DOUBLE PRECISION))) as throughput_qps\nFROM ${experiment["32core_table"]}\nWHERE\n  $__timeFilter(metadata->>'created') AND\n  scenario->>'name' = 'cpp_protobuf_async_streaming_qps_unconstrained_secure'\nGROUP BY\n  \"time\", metric;",
            "refId": "${experiment["name"]}",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "${experiment["8core_table"]}",
            "timeColumn": "date",
            "timeColumnType": "timestamptz",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }${',' if not loop.last else ''}
          % endfor
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Streaming secure throughput QPS (32 core client to 32 core server)",
        "tooltip": {
          "shared": false,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Postgres",
        "description": "",
        "fieldConfig": {
          "defaults": {
            "unit": "short"
          },
          "overrides": []
        },
        "fill": 0,
        "fillGradient": 0,
        "gridPos": {
          "h": 9,
          "w": 8,
          "x": 8,
          "y": 54
        },
        "hiddenSeries": false,
        "id": 23,
        "legend": {
          "alignAsTable": true,
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "rightSide": true,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "7.5.5",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": ${series_overrides},
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
        % for experiment in experiments:
          {
            "format": "time_series",
            "group": [],
            "metricColumn": "scenario",
            "queryType": "randomWalk",
            "rawQuery": true,
            "rawSql": "SELECT\n    (metadata->>'created')::timestamp AS \"time\",\n    '${experiment["name"]}' as metric,\n    MAX(ROUND(CAST(summary->>'serverSystemTime' AS DOUBLE PRECISION) + CAST(summary->>'serverUserTime' AS DOUBLE PRECISION))) / 100 as server_cpu\nFROM ${experiment["32core_table"]}\nWHERE\n  $__timeFilter(metadata->>'created') AND\n  scenario->>'name' = 'cpp_protobuf_async_streaming_qps_unconstrained_secure'\nGROUP BY\n  \"time\", metric;",
            "refId": "${experiment["name"]}",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "${experiment["8core_table"]}",
            "timeColumn": "date",
            "timeColumnType": "timestamptz",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }${',' if not loop.last else ''}
          % endfor
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Streaming secure server CPU (32 core client to 32 core server)",
        "tooltip": {
          "shared": false,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Postgres",
        "description": "",
        "fieldConfig": {
          "defaults": {
            "unit": "short"
          },
          "overrides": []
        },
        "fill": 0,
        "fillGradient": 0,
        "gridPos": {
          "h": 9,
          "w": 8,
          "x": 16,
          "y": 54
        },
        "hiddenSeries": false,
        "id": 24,
        "legend": {
          "alignAsTable": true,
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "rightSide": true,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "7.5.5",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": ${series_overrides},
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
        % for experiment in experiments:
          {
            "format": "time_series",
            "group": [],
            "metricColumn": "scenario",
            "queryType": "randomWalk",
            "rawQuery": true,
            "rawSql": "SELECT\n    (metadata->>'created')::timestamp AS \"time\",\n    '${experiment["name"]}' as metric,\n    MAX(ROUND(CAST(summary->>'clientSystemTime' AS DOUBLE PRECISION) + CAST(summary->>'clientUserTime' AS DOUBLE PRECISION)) / 100) as client_cpu\nFROM ${experiment["32core_table"]}\nWHERE\n  $__timeFilter(metadata->>'created') AND\n  scenario->>'name' = 'cpp_protobuf_async_streaming_qps_unconstrained_secure'\nGROUP BY\n  \"time\", metric;",
            "refId": "${experiment["name"]}",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "${experiment["8core_table"]}",
            "timeColumn": "date",
            "timeColumnType": "timestamptz",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }${',' if not loop.last else ''}
          % endfor
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Streaming secure client CPU (32 core client to 32 core server)",
        "tooltip": {
          "shared": false,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": "Postgres",
        "description": "Throughput as number of unary RPCs per second between two GKE nodes in the same cluster (each node resides on a separate VM, but both VMs are located in the same compute zone). Secure connection is used. Both request & response are 1MB large.",
        "fieldConfig": {
          "defaults": {
            "unit": "short"
          },
          "overrides": []
        },
        "fill": 0,
        "fillGradient": 0,
        "gridPos": {
          "h": 9,
          "w": 24,
          "x": 0,
          "y": 63
        },
        "hiddenSeries": false,
        "id": 25,
        "legend": {
          "alignAsTable": true,
          "avg": false,
          "current": false,
          "max": false,
          "min": false,
          "rightSide": true,
          "show": true,
          "total": false,
          "values": false
        },
        "lines": true,
        "linewidth": 1,
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "7.5.5",
        "pointradius": 2,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": ${series_overrides},
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
        % for experiment in experiments:
          {
            "format": "time_series",
            "group": [],
            "metricColumn": "scenario",
            "queryType": "randomWalk",
            "rawQuery": true,
            "rawSql": "SELECT\n    (metadata->>'created')::timestamp AS \"time\",\n    '${experiment["name"]}' as metric,\n    MIN(ROUND(CAST(summary->>'qps' AS DOUBLE PRECISION))) as throughput_qps\nFROM ${experiment["8core_table"]}\nWHERE\n  $__timeFilter(metadata->>'created') AND\n  scenario->>'name' = 'cpp_protobuf_async_unary_ping_pong_secure_1MB'\nGROUP BY\n  \"time\", metric;",
            "refId": "${experiment["name"]}",
            "select": [
              [
                {
                  "params": [
                    "value"
                  ],
                  "type": "column"
                }
              ]
            ],
            "table": "${experiment["8core_table"]}",
            "timeColumn": "date",
            "timeColumnType": "timestamptz",
            "where": [
              {
                "name": "$__timeFilter",
                "params": [],
                "type": "macro"
              }
            ]
          }${',' if not loop.last else ''}
          % endfor
        ],
        "thresholds": [],
        "timeFrom": null,
        "timeRegions": [],
        "timeShift": null,
        "title": "Unary secure throughput QPS with 1MB message (8 core client to 8 core server)",
        "tooltip": {
          "shared": false,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "buckets": null,
          "mode": "time",
          "name": null,
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          },
          {
            "format": "short",
            "label": null,
            "logBase": 1,
            "max": null,
            "min": null,
            "show": true
          }
        ],
        "yaxis": {
          "align": false,
          "alignLevel": null
        }
      }
    ],
    "refresh": false,
    "schemaVersion": 27,
    "style": "dark",
    "tags": [],
    "templating": {
      "list": []
    },
    "time": {
      "from": "now-14d",
      "to": "now"
    },
    "timepicker": {},
    "timezone": "browser",
    "title": "gRPC C++ Experiments: Performance Dashboard",
    "uid": "hork-20230731",
    "version": 0
  }
